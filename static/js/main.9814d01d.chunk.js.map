{"version":3,"sources":["panels/Home.js","panels/Predlog.js","panels/Oservise.js","panels/Sch1home.js","panels/Sch2home.js","panels/Sum1home.js","panels/Sum2home.js","panels/Sch1.js","panels/Sch2.js","panels/Sch3.js","panels/Sum1.js","panels/Sum2.js","panels/Car1.js","App.js","index.js"],"names":["Home","id","go","left","onClick","data-to","style","padding","fontWeight","marginBottom","color","mode","href","paddingBottom","header","size","width","height","description","bottomContent","before","src","after","Predlog","platform","placeholder","value","level","fetch","method","body","document","querySelector","Oservise","vertical","expandable","background","fill","indicator","paddingTop","align","App","props","getUser","catched","setState","user","infected","heal","coins","api","GetUser","then","res","logins","setTimeout","getTop","top","GetTop","getCoinsTop","coinsTop","GetCoinsTop","openDoneSnackBar","e","state","snackbar","layout","duration","onClose","backgroundColor","activePanel","activeStory","tab","fetchedUser","first_name","last_name","popout","modal","entered","copied","rolled","scheme","bridge","subscribe","detail","type","data","schemeAttribute","createAttribute","attributes","setNamedItem","status","send","result","parseInt","window","location","hash","replace","a","this","openErrorSnackBar","setParentState","bind","openModal","buyHeal","BuyHeal","view","isWebView","tabbar","selected","text","label","onSwipeBack","history","userSelect","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9814d01d.chunk.js","sourcesContent":["import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n\tPanelHeader , Group, Button, Panel, Avatar, Header, List, Cell,\n\tSeparator, Div\n} from '@vkontakte/vkui/';\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon20EducationOutline from '@vkontakte/icons/dist/20/education_outline';\nimport Icon20HomeOutline from '@vkontakte/icons/dist/20/home_outline';\nimport HorizontalScroll from '@vkontakte/vkui/dist/components/HorizontalScroll/HorizontalScroll';\nimport Icon24User from '@vkontakte/icons/dist/24/user';\nimport CardScroll from '@vkontakte/vkui/dist/components/CardScroll/CardScroll';\nimport Icon28InfoOutline from '@vkontakte/icons/dist/28/info_outline';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport FormStatus from '@vkontakte/vkui/dist/components/FormStatus/FormStatus';\n \n\nconst Home = ({id, go, }) => (\n  <Panel id={id}>\n  \t<PanelHeader\n\t\t\t\t \n         left={<PanelHeaderButton onClick={go} data-to=\"oservise\">\n             {<Icon28InfoOutline />} \n           </PanelHeaderButton >}\n       >\n             <small>Популярное</small>\n       </PanelHeader>\n\n      <Div style={{ padding: 5}}>\n        <FormStatus style={{\n          fontWeight: 400,\n          marginBottom: -5,\n          color: 'bright_light' ? '#6d7885' : '#909499'\n        }}>\n          В связи с пандемией коронавируса хотим напомнить вам, что нужно часто мыть руки, избегать мест скопления людей и по возможности не выходите из дома. \n          <div>\n          <Button style={{\n          left: -1,\n          padding: 0,\n          marginBottom: -5,\n          color: 'bright_light' ? '#3f8ae0' : '#71aaeb'\n       }}\n               mode='tertiary'\n               href=\"https://vk.com/covid19\"\n       >Главное о COVID-19</Button>\n          </div>\n        </FormStatus>\n      </Div>\n\n\t\t<Group style={{ paddingBottom: 8 }} header={<Header mode=\"secondary\">Популярные категории</Header>}>\n    <CardScroll>\n        <Card size=\"m\">\n          <div style={{ width: 250, height: 100 }} />\n        </Card>\n        <Card size=\"m\">\n          <div style={{ width: 224, height: 96 }} />\n        </Card>\n        <Card size=\"m\">\n          <div style={{ width: 224, height: 96 }} />\n        </Card>\n      </CardScroll>\n\t\t</Group>\n    <Group style={{ paddingBottom: 8 }} header={<Header mode=\"secondary\">Популярные лайфхаки</Header>}>\n    <CardGrid>\n          <Card size=\"l\">\n            <div style={{ height: 0 }} />\n            <Cell\n          description=\"Категории: Лайфхаки для школы\" \n          bottomContent={<Button>Показать</Button>}\n          before={<Avatar mode=\"app\" src=\"https://sun9-12.userapi.com/c206524/v206524006/ce8bf/r7mTS30qOYQ.jpg\" size={80}/>}\n          size=\"l\"\n        >\n          Шпаргалка из скотча\n        </Cell>\n          </Card>\n        </CardGrid>\n        <Div></Div>\n    <CardGrid>\n          <Card size=\"l\">\n            <div style={{ height: 0 }} />\n            <Cell\n          description=\"Категории: Лайфхаки для школы\"\n          bottomContent={<Button>Показать</Button>}\n          before={<Avatar mode=\"app\" src=\"https://sun9-12.userapi.com/c206524/v206524006/ce8bf/r7mTS30qOYQ.jpg\" size={80}/>}\n          size=\"l\"\n        >\n          Исправление не пишущей ручки\n        </Cell>\n          </Card>\n        </CardGrid>\n        <Div></Div>\n    <CardGrid>\n          <Card size=\"l\">\n            <div style={{ height: 0 }} />\n            <Cell\n          description=\"Категории:\" \n          description=\"Лайфхаки для школы\"\n          bottomContent={<Button>Показать</Button>}\n          before={<Avatar mode=\"app\" src=\"https://sun9-12.userapi.com/c206524/v206524006/ce8bf/r7mTS30qOYQ.jpg\" size={80}/>}\n          size=\"l\"\n        >\n          Шпаргалка из скотча\n        </Cell>\n          </Card>\n        </CardGrid>\n        </Group>\n        <Separator/>\n        <Div>\n\t\t<Button onClick={go} data-to=\"oservise\" size=\"xl\" after={<Counter>4</Counter>}>Показать все категории</Button>\n    </Div>\n\t   </Panel>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport FormStatus from '@vkontakte/vkui/dist/components/FormStatus/FormStatus';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\n\nconst osName = platform();\n\nconst Predlog = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton>\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Предложить лайфхак</small>\n\t\t</PanelHeader>\n\t\t<FormLayout>\n      <FormStatus header =\"Данную функцию тестировать не нужно!\" >\n        Данная функция ещё находится в разработке, тестировать её пока не нужно.\n      </FormStatus>\n\t </FormLayout>\n\t <Div>\n\t        <Select placeholder=\"Выберите категорию\">\n              <option value=\"m\">Лайфхаки для школы</option>\n              <option value=\"f\">Лайфхаки для дома</option>\n\t\t\t  <option value=\"r\">Лайфхаки для машины</option>\n\t\t\t  <option value=\"t\">Лайфхаки для лета</option>\n            </Select>\n\t\t\t</Div>\n\t\t<FormLayout>\n        <Textarea placeholder=\"Название лайфхака, процесс изготовления, ссылка на источник...\" />\n\t\t<Checkbox>Я согласен(а) с <Link href=\"https://vk.com/@lifehacker_servis-1\">условиями</Link> размещения.</Checkbox>\n\t  <Div>\n\t  <Button size=\"xl\" level=\"2\" onClick={()=>fetch('https://vk.com/im?media=&sel=-192443283', {method:'post',body:document.querySelector('input').value})}>\n\t\t\t\t\tОтправить\n\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t\t</FormLayout>\n\t</Panel>\n);\n\nPredlog.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Predlog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon28MoneyCircleOutline from '@vkontakte/icons/dist/28/money_circle_outline';\nimport Icon20EducationOutline from '@vkontakte/icons/dist/20/education_outline';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport Search from '@vkontakte/vkui/dist/components/Search/Search';\n\nimport {\n\tGroup, Header, List, InfoRow, Counter \n} from '@vkontakte/vkui/';\n\nconst Oservise = ({ go, id}) => (\n\t<Panel id={id}>\n        \t<PanelHeader\n\t\t\tleft={<PanelHeaderButton>\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t    <small>Категории</small>\n\t\t</PanelHeader>\n\t\t<FixedLayout vertical=\"top\">\n            <Search />\n\t\t<Group>\n        <List>\n                <Cell expandable\n\t\t\t\t\tbefore={<Avatar size={45} style={{\n\t\t\t\t\t\tbackground: '#6ba6f6'\n\t\t\t\t\t}}><Icon20EducationOutline  fill='#fff' width={30} height={30}/></Avatar>}  onClick={go} data-to=\"forschool\" >Лайфхаки для школы</Cell> \n                <Separator />\n\n\t\t\t\t<Cell expandable before={<Avatar size={45} style={{\n\t\t\t\t\t\tbackground: '#51b651'\n\t\t\t\t\t}}><Icon28MoneyCircleOutline fill='#fff' width={30} height={30}/></Avatar>} onClick={go} data-to=\"forhome\" >Лайфхаки для дома</Cell>\n                <Separator />\n                <Cell expandable before={<Avatar size={45} style={{\n\t\t\t\t\t\tbackground: '#ffa000'\n\t\t\t\t\t}}><Icon28MoneyCircleOutline fill='#fff' width={30} height={30}/></Avatar>} onClick={go} data-to=\"forthecar\" >Лайфхаки для машины</Cell> \n                <Separator />\n                <Cell expandable before={<Avatar size={45} style={{\n\t\t\t\t\t\tbackground: '#ff3347'\n\t\t\t\t\t}}><Icon28MoneyCircleOutline fill='#fff' width={30} height={30}/></Avatar>} indicator={<Counter>В разработке</Counter>}>Лайфхаки для лета</Cell>\n                <Separator />\n                <Div style={{ paddingTop: 0, paddingBottom: 0, color: 'grey' }}>\n\t\t\t\t<p align=\"center\">Скоро тут появятся новые категории.</p>\n\t\t\t\t</Div>\n                <Separator />\n                </List>\n                </Group>\n\t\t\t\t</FixedLayout>\n\t\t</Panel>\n\t\n\t\n\t);\n\n\nOservise.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tany: PropTypes.func,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Oservise;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sch1home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Шпаргалка из скотча</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для школы\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/SMMyTP7aXUct50WzUZbmbTtBlpY9MlSQPFglAsXYY0nAVMx0UYPZn1ifSPsu-GdyAkEK=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"Лайфхакер\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          Ноутбук / компьютер\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Принтер\n\t\t\t\t\t  <br/>\n\t\t\t\t      Лист бумаги А4\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Скотч\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Теплая вода (не кипящая)\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tДля начала изготовления шпаргалка, нужно выбрать текстовый редактор (например \"Microsoft Word\"). В нём важно задать не сильно большой шрифт, удалить все самые лишние слова, а нужные по максимуму сократить. После чего нужно распечать загатовленную шпаргалку на принтере. Скотч с присоединённой к нему текстовой информацией опускается в воду высокой температуры (но не в сильно кипящую) на пару минут (чтобы полоска не сворачивалась, положите на нее пресс). После погруженная заготовка извлекается из жидкости и аккуратно отделяется скотчом от листа бумаги.\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSch1home.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sch1home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sch2home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Исправление не пишущей ручки</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для школы\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/SMMyTP7aXUct50WzUZbmbTtBlpY9MlSQPFglAsXYY0nAVMx0UYPZn1ifSPsu-GdyAkEK=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"shkolabuduschego.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t              Неработающая ручка\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Зажигалка \n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Плотный лист бумаги\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tСильно встряхните ручку. Ухватите её со стороны колпачка и потрясите ею, как делаете это с градусником при измерении температуры. Такая манипуляция поможет при тех обстоятельствах, если пузырьки воздуха проникли в стержень. \n\t\t<br/>\n\t\tЕсли предыдущий способ не помог, то возьмите любое устройство для получения огня и направьте пламя на кончик пишущего устройства. Произведите это действие в течение непродолжительного времени, иначе ручка может потрескаться или взорваться. После этого попробуйте расписать канцелярскую принадлежность на плотной бумаге.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSch2home.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sch2home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sum1home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Резинка для двери</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для дома\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/guAdzD4GExYVuzdxHdlDpCWgN98JFA5RuSDtnTQfka--9NSoSztno6AxEAOpVXorYapakWU=s86\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"dizainvfoto.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          Канцелярская резинка\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Дверь\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tИногда бывает так, что дверь постоянно самостоятельно открывается или закрывается. Для того, чтобы такое больше не повторялось, рекомендуется воспользоваться обычной канцелярской резинкой. Ее нужно надеть на ручку с обеих сторон двери, перекресчивая, чтобы образовался крест-накрест в области защелки. После этого, дверь перестанет самостоятельно открываться.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSum1home.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sum1home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sum2home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline /> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Держатель для планшета</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для дома\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/guAdzD4GExYVuzdxHdlDpCWgN98JFA5RuSDtnTQfka--9NSoSztno6AxEAOpVXorYapakWU=s86\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"forbau.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          3-4 крючка для полоценец\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Планшет / телефон\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tЕсли вы любитель посмотреть новую серию любимого сериала на кухне или ванной, а поставить гаджет некуда, подыщите несколько крючков для полотенец. Расположите и закрепите их так, чтобы они удерживали ваш смартфон, а добавив еще один сверху – получится отличный держатель для планшета.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSum2home.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sum2home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon24Newsfeed from '@vkontakte/icons/dist/24/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sch1 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forschool\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Шпаргалка из скотча</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для школы\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/SMMyTP7aXUct50WzUZbmbTtBlpY9MlSQPFglAsXYY0nAVMx0UYPZn1ifSPsu-GdyAkEK=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"Лайфхакер\"\n\t\t  before={<Icon24Newsfeed width={28} height={28} fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"m\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          Ноутбук / компьютер\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Принтер\n\t\t\t\t\t  <br/>\n\t\t\t\t      Лист бумаги А4\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Скотч\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Теплая вода (не кипящая)\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tДля начала изготовления шпаргалки, нужно выбрать текстовый редактор (например \"Microsoft Word\"). В нём важно задать не сильно большой шрифт, удалить все самые лишние слова, а нужные по максимуму сократить. После чего нужно распечать загатовленную шпаргалку на принтере. Скотч с присоединённой к нему текстовой информацией опускается в воду высокой температуры (но не в сильно кипящую) на пару минут (чтобы полоска не сворачивалась, положите на нее пресс). После погруженная заготовка извлекается из жидкости и аккуратно отделяется скотчем от листа бумаги.\n\t\t\t\t\t<br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить свой лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSch1.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sch1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\nconst osName = platform();\n\nconst Sch2 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forschool\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Исправление не пишущей ручки</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для школы\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/SMMyTP7aXUct50WzUZbmbTtBlpY9MlSQPFglAsXYY0nAVMx0UYPZn1ifSPsu-GdyAkEK=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"shkolabuduschego.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t              Неработающая ручка\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Зажигалка \n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Плотный лист бумаги\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tСильно встряхните ручку. Ухватите её со стороны колпачка и потрясите ею, как делаете это с градусником при измерении температуры. Такая манипуляция поможет при тех обстоятельствах, если пузырьки воздуха проникли в стержень. \n\t\t<br/>\n\t\tЕсли предыдущий способ не помог, то возьмите любое устройство для получения огня и направьте пламя на кончик пишущего устройства. Произведите это действие в течение непродолжительного времени, иначе ручка может потрескаться или взорваться. После этого попробуйте расписать канцелярскую принадлежность на плотной бумаге.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSch2.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sch2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sch3 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forschool\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Стирание чернил с листа</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для школы\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/SMMyTP7aXUct50WzUZbmbTtBlpY9MlSQPFglAsXYY0nAVMx0UYPZn1ifSPsu-GdyAkEK=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"shkolabuduschego.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t              Ватная палочка\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Жидкость для снятия лака\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Кусочек марли\n\t\t\t\t\t  <br/>\n                      Скотч\n\t\t\t\t\t  <br/>\n                      <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tУдаление чернил с бумажных носителей может быть вызвано целым множеством причин: двойкой в дневнике, помаркой в контрольной или домашней работе и т. д. Возьмите ватную палочку и поместите её в жидкость для снятия лака. Покройте раствором проблемную область и закрепите палочку на ней, а затем подождите пару минут. Далее с помощью марли аккуратно сотрите ненужные чернила. Наклейте кусочек скотча на желаемое место исправления и аккуратно оторвите его.\n        <br/>\n        <br/>       \n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSch3.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sch3;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sum1 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forhome\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Резинка для двери</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для дома\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/guAdzD4GExYVuzdxHdlDpCWgN98JFA5RuSDtnTQfka--9NSoSztno6AxEAOpVXorYapakWU=s86\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"dizainvfoto.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          Канцелярская резинка\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Дверь\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tИногда бывает так, что дверь постоянно самостоятельно открывается или закрывается. Для того, чтобы такое больше не повторялось, рекомендуется воспользоваться обычной канцелярской резинкой. Ее нужно надеть на ручку с обеих сторон двери, перекресчивая, чтобы образовался крест-накрест в области защелки. После этого, дверь перестанет самостоятельно открываться.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSum1.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sum1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\n\n\nconst osName = platform();\n\nconst Sum2 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forhome\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>} width={1} height={1}\n\t\t>\n\t\t\t<small>Держатель для планшета</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для дома\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/guAdzD4GExYVuzdxHdlDpCWgN98JFA5RuSDtnTQfka--9NSoSztno6AxEAOpVXorYapakWU=s86\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"forbau.ru\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          3-4 крючка для полоценец\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  Планшет / телефон\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\tЕсли вы любитель посмотреть новую серию любимого сериала на кухне или ванной, а поставить гаджет некуда, подыщите несколько крючков для полотенец. Расположите и закрепите их так, чтобы они удерживали ваш смартфон, а добавив еще один сверху – получится отличный держатель для планшета.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t<Separator />\n\t\t<Div>\n\t\t<Button onClick={go} data-to=\"predlog\" size=\"xl\">Предложить лайфхак</Button>\n\t\t</Div>\n\t\n\t</Panel>\n);\n\nSum2.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Sum2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Card from '@vkontakte/vkui/dist/components/Card/Card';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\n\n\nconst osName = platform();\n\nconst Car1 = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={go} data-to=\"forthecar\">\n\t\t\t\t{osName === IOS ? <Icon28ArrowLeftOutline/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\t<small>Завести авто в мороз</small>\n\t\t</PanelHeader>\n\t\t  <br/>\n\t\t<Cell \n          size=\"l\"\n\t\t  description=\"Лайфхаки для машины\"\n\t\t  before={<Avatar src=\"https://lh3.googleusercontent.com/Po8ivvzxEy2y-Xvmcg5M2dWPJSbXhrU5IBj52Wxp2_8ClSXmm436bL0ZU_PCsAYbtmJ2=s85\"/>}\n        >\n          Категория: \n        </Cell>\n\t\t<Separator />\n\t\t<Cell\n\t\t  size=\"l\"\n\t\t  description=\"Лайфхакер\"\n\t\t  before={<Icon28Newsfeed fill='#4bb34b' />} \n        >\n          Источник: \n        </Cell>\n\t\t<Separator />\n\t\t<br/>\n\t\t  <CardGrid>\n          <Card size=\"xs\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Вам понадобится</Header>}>\n\t\t  <Separator />\n\t\t  <Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n\t\t\t          Машина\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  <br/>\n\t\t\t\t\t  </Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t            <br/>\n\t\t\t\t\t<Separator />\n\t\t\t\t\t<br/>\n\t\t\t\t\t<CardGrid>\n          <Card size=\"l\" mode=\"shadow\">\n\t\t  <Group header={<Header mode=\"secondary\">Процесс изготовления</Header>}>\n\t\t  <Separator />\n\t\t<Div style={{ paddingTop: 10, paddingBottom: 0, }}>\n            Если аккумулятор ещё не совсем разрядился (не под самый ноль), можно немного его \"подбодрить\". Перед запуском двигателя включите и выключите фары. Это немного поднимет температуру батареи и облегчит его запуск.\n\t\t            <br/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t\t\t</Card>\n        </CardGrid>\n\t\t<br/>\n\t\t\t\t\t<br/>\n\t\n\t</Panel>\n);\n\nCar1.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Car1;\n","import React, { Component } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n//import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nimport Forschool from './panels/Forschool';\nimport Forsummer from './panels/Forsummer';\nimport Forhome from './panels/Forhome';\nimport Forthecar from './panels/Forthecar';\n\nimport Vslfschool from './panels/Vslfschool';\nimport Vslfhome from './panels/Vslfhome';\n\nimport Predlog from './panels/Predlog';\nimport Oservise from './panels/Oservise';\n\nimport Sch1home from './panels/Sch1home';\nimport Sch2home from './panels/Sch2home';\nimport Sum1home from './panels/Sum1home';\nimport Sum2home from './panels/Sum2home';\n\nimport Sch1 from './panels/Sch1';\nimport Sch2 from './panels/Sch2';\nimport Sch3 from './panels/Sch3';\n\nimport Sum1 from './panels/Sum1';\nimport Sum2 from './panels/Sum2';\n\nimport Car1 from './panels/Car1';\n\n\nimport {\n    Snackbar, View, ConfigProvider, Avatar, Epic, Tabbar, TabbarItem,\n    ModalPageHeader, ModalRoot, IS_PLATFORM_IOS, IS_PLATFORM_ANDROID, ModalPage,\n    PanelHeaderButton, Input, Div, FormLayout, Button\n} from \"@vkontakte/vkui\";\n\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\n\nimport Icon24View from '@vkontakte/icons/dist/24/view';\nimport Icon24Story from '@vkontakte/icons/dist/24/story';\nimport Icon24Message from '@vkontakte/icons/dist/24/message';\nimport Icon24Share from '@vkontakte/icons/dist/24/share';\nimport Icon24Linked from '@vkontakte/icons/dist/24/linked';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nimport Icon28InfoOutline from '@vkontakte/icons/dist/28/info_outline';\nimport Icon28MenuOutline from '@vkontakte/icons/dist/28/menu_outline';\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport Icon28StoryOutline from '@vkontakte/icons/dist/28/story_outline';\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'games',\n            \n\n            activeStory: 'games',\n\n            tab: 'infected',\n\n            fetchedUser: {\n                first_name: 'Test',\n                last_name: 'User',\n                id: 1\n            },\n            user: {\n                infected: '<загрузка>',\n                catched: '<загрузка>',\n            },\n\n            coins: '<загрузка>',\n            heal: '<загрузка>',\n\n            top: [],\n            coinsTop: [],\n\n            popout: null,\n            modal: null,\n\n            entered: '',\n\n            copied: false,\n\n            rolled: true,\n\n            scheme: true ? 'bright_light' : 'space_gray'\n        };\n\n\t}\n\n    componentDidMount() {\n        bridge.subscribe(({ detail: { type, data }}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n            if (type === 'VKWebAppOpenPayFormResult') {\n\n                if(data.status) {\n                    this.setState({\n                        coins: this.state.coins + 1000\n                    });\n                    this.openDoneSnackBar('Успешно!');\n                    bridge.send(\"VKWebAppSendPayload\", {\"group_id\": 191838894, \"payload\": {\"foo\": \"bar\"}});\n                }\n            }\n            if (type === 'VKWebAppCopyTextResult') {\n                this.openDoneSnackBar('Ссылка скопирована!');\n                this.setState({\n                    copied: true\n                });\n                setTimeout(() => {\n                    this.setState({\n                        copied: false\n                    });\n                }, 2000)\n                bridge.send(\"VKWebAppTapticNotificationOccurred\", {\"type\": \"success\"});\n            }\n            if (type === 'VKWebAppAllowMessagesFromGroupResult') {\n                if(!data.result) return;\n                this.openDoneSnackBar('Вы будете получать уведомления о зараженных!');\n                bridge.send(\"VKWebAppTapticNotificationOccurred\", {\"type\": \"success\"});\n            }\n            if (type === 'VKWebAppGetUserInfoResult') {\n                this.setState({\n                    fetchedUser: data,\n                    popout: null\n                });\n                const catched = parseInt(window.location.hash.replace('#', '')) || '';\n                this.getUser(catched);\n            }\n        });\n        bridge.send('VKWebAppGetUserInfo');\n        bridge.send(\"VKWebAppJoinGroup\", {\"group_id\": 191838894});\n    }\n\n\n    getUser = (catched) => {\n        this.setState({\n            user: {\n                infected: '<загрузка>',\n                catched: '<загрузка>'\n            },\n            heal: '<загрузка>',\n            coins: '<загрузка>',\n        });\n        this.api.GetUser(catched).then(res => {\n            if(res.logins && res.logins === 0){\n                setTimeout(() => {\n\n                }, 2000)\n            }\n            this.setState({\n                coins: res.coins,\n                user: res,\n                heal: res.heal\n            })\n        });\n    };\n    getTop = () => {\n        this.setState({\n            top: []\n        });\n        this.api.GetTop().then(res => {\n            this.setState({\n                top: res\n            });\n        })\n    };\n    getCoinsTop = () => {\n        this.setState({\n            coinsTop: []\n        });\n        this.api.GetCoinsTop().then(res => {\n            this.setState({\n                coinsTop: res\n            });\n        })\n    };\n    openDoneSnackBar = e => {\n        if(this.state.snackbar){\n            this.setState({\n                snackbar: null\n            });\n            return;\n        }\n        this.setState({ snackbar:\n                <Snackbar\n                    layout=\"vertical\"\n                    duration={3000}\n                    onClose={() => this.setState({\n                        snackbar: null\n                    })}\n                    before={\n                        <Avatar\n                            size={24}\n                            style={{ backgroundColor: '#4bb34b' }}\n                        ><Icon16Done fill=\"#fff\" width={14} height={14} />\n                        </Avatar>\n                    }\n                >\n                    {e}\n                </Snackbar>\n        });\n    };\n\n    render() {\n        const go = (e,a) => {\n            this.setState({\n                activePanel: e,\n                activeStory: a ? a : this.state.activeStory,\n                snackbar: null\n            });\n        };\n\n        const { openDoneSnackBar, getTop, getUser, getCoinsTop } = this;\n\n        const openErrorSnackBar = e => {\n            if(this.state.snackbar){\n                this.setState({\n                    snackbar: null\n                });\n                return;\n            }\n            this.setState({ snackbar:\n                    <Snackbar\n                        duration={3000}\n                        layout=\"vertical\"\n                        onClose={() => this.setState({\n                            snackbar: null\n                        })}\n                        before={\n                            <Avatar\n                                size={24}\n                                style={{ backgroundColor: '#FF0000' }}\n                            ><Icon16Clear fill=\"#fff\" width={14} height={14} />\n                            </Avatar>\n                        }\n                    >\n                        {e}\n                    </Snackbar>\n            });\n        };\n\n        \n        const closeModal = () => {\n            this.setState({\n                modal: null\n            })\n        };\n\n        const buyHeal = () => {\n            if((this.state.coins >= 30)){\n                this.api.BuyHeal().then(res => {\n                    if(res === 'success'){\n                        this.setState({\n                            coins: this.state.coins - 30,\n                            heal: this.state.heal + 1\n                        });\n                        openDoneSnackBar('Успешно')\n                    }\n                });\n            } else {\n                openErrorSnackBar('Баланса недостаточно')\n            }\n        };\n\n        const openModal = () => {\n            this.setState({\n                modal: '1'\n            })\n        };\n\n        const {\n            fetchedUser, activePanel, activeStory, popout, snackbar\n        } = this.state;\n\n        const state = this.state;\n\n        const props = {\n            openDoneSnackBar, openErrorSnackBar, fetchedUser, go, snackbar, state,\n            setParentState: this.setState.bind(this),\n            openModal, getTop, getUser, buyHeal, getCoinsTop\n        };\n        \n        const view = { popout};\n    \n        return (\n            <ConfigProvider isWebView scheme={state.scheme}>\n            <Epic activeStory={activeStory} tabbar={\n                <Tabbar>\n                    <TabbarItem\n                        onClick={() => go('games', 'games')}\n                        selected={this.state.activeStory === 'games'}\n                        text=\"Популярное\"\n                    ><Icon28ArticleOutline /></TabbarItem>\n                    <TabbarItem\n                        onClick={() => go('new', 'new') }\n                        selected={this.state.activeStory === 'new'}\n                        label=\"4\"\n                        text=\"Категории\"\n                    ><Icon28MenuOutline /></TabbarItem>\n                    <TabbarItem\n                        onClick={() => go('predlog', 'predlog') }\n                        selected={this.state.activeStory === 'predlog'}\n                        text=\"Предложить\"\n                    ><Icon28AddOutline /></TabbarItem>  \n                </Tabbar>\n            }>\n                <View\n                    id='games'\n                    activePanel={activePanel}\n                    onSwipeBack={() => go('games')}\n                    history={ activePanel !== 'games' ? ['games', activePanel] : ['games']}\n                    {...view}\n                >\n                    <Home style={{ userSelect: 'none' }} id='games' {...props} />\n                    <Oservise id='oservise' {...props} />\n                    <Predlog id='predlog' {...props} />\n                    </View>\n                    <View id='new' activePanel='new' {...view}>\n                    <Oservise id='new' {...props} />\n                </View>\n                <View id='predlog' activePanel='predlog' {...view}>\n                    <Predlog id='predlog' {...props} />\n                </View>\n            </Epic>\n            </ConfigProvider>\n        );\n\n    };\n        \n    }\n    \nexport default App;\n\n\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}